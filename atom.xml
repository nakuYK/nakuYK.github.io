<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>久等</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-02-25T10:54:30.513Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>YangKun</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>JavaScript笔记</title>
    <link href="http://yoursite.com/2019/02/24/JavaScript%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2019/02/24/JavaScript笔记/</id>
    <published>2019-02-24T13:25:09.000Z</published>
    <updated>2019-02-25T10:54:30.513Z</updated>
    
    <content type="html"><![CDATA[<h3 id="JavaScript事件"><a href="#JavaScript事件" class="headerlink" title="JavaScript事件"></a>JavaScript事件</h3><p>onclick　　　　单击事件<br>onmouseover　　鼠标经过事件<br>onmouseout　　鼠标移出事件<br>onchange　　　文本内容改变事件<br>onselect　　　文本框选中事件<br>onfocus　　　光标聚集事件<br>onblur　　　　网页加载事件<br>onunload　　　关闭网页事件</p><h3 id="JavaScript函数"><a href="#JavaScript函数" class="headerlink" title="JavaScript函数"></a>JavaScript函数</h3><h4 id="JavaScript使用关键字function定义函数。"><a href="#JavaScript使用关键字function定义函数。" class="headerlink" title="JavaScript使用关键字function定义函数。"></a>JavaScript使用关键字function定义函数。</h4><pre><code>function myFunction(a, b) {    return a * b;}</code></pre><h4 id="函数可以通过声明定义，也可以是一个表达式。"><a href="#函数可以通过声明定义，也可以是一个表达式。" class="headerlink" title="函数可以通过声明定义，也可以是一个表达式。"></a>函数可以通过声明定义，也可以是一个表达式。</h4><pre><code>var x = function (a, b) {    return a * b;} </code></pre><h4 id="函数表达式可以”自调用”。"><a href="#函数表达式可以”自调用”。" class="headerlink" title="函数表达式可以”自调用”。"></a>函数表达式可以”自调用”。</h4><pre><code>(function () {    var x = &quot;Hello!!&quot;;      // 我将调用自己})();</code></pre><h4 id="函数是对象"><a href="#函数是对象" class="headerlink" title="函数是对象"></a>函数是对象</h4><p>JavaScript函数有属性和方法。 </p><h4 id="JavaScript变量可以是局部变量或全局变量。"><a href="#JavaScript变量可以是局部变量或全局变量。" class="headerlink" title="JavaScript变量可以是局部变量或全局变量。"></a>JavaScript变量可以是局部变量或全局变量。</h4><p>函数可以访问由函数内部定义的变量。（局部变量）<br>函数也可以访问函数外部定义的变量。（全局变量）</p><h4 id="JavaScript闭包"><a href="#JavaScript闭包" class="headerlink" title="JavaScript闭包"></a>JavaScript闭包</h4><p>闭包是可访问其它函数作用域里变量的函数。因为变量被引用着所以不会被回收，因此可以用来封装一个私有变量。这是优点也是缺点，不必要的闭包只会增加内存消耗。</p><h3 id="JavaScript-HTML-DOM"><a href="#JavaScript-HTML-DOM" class="headerlink" title="JavaScript　HTML　DOM"></a>JavaScript　HTML　DOM</h3><h4 id="HTML-DOM（文档对象模型）"><a href="#HTML-DOM（文档对象模型）" class="headerlink" title="HTML　DOM（文档对象模型）"></a>HTML　DOM（文档对象模型）</h4><p>HTML　DOM树<br><img src="htmltree.gif" alt="html dom 树"></p><h4 id="JavaScript-HTML-DOM-改变-HTML"><a href="#JavaScript-HTML-DOM-改变-HTML" class="headerlink" title="JavaScript　HTML　DOM - 改变 HTML"></a>JavaScript　HTML　DOM - 改变 HTML</h4><p>改变HTML输出流：JavaScript能够创建动态的HTML内容。<br>改变HTML内容：修改HTML内容的最简单的方法是使用innerHTML属性改变元素的内容。</p><pre><code>document.getElementById(id).innerHTML=新的HTML</code></pre><p>改变HTML属性：如需改变HTML元素的属性，使用这个语法：</p><pre><code>document.getElementById(id).attribute=新属性值</code></pre><h4 id="JavaScript-HTML-DOM-改变CSS"><a href="#JavaScript-HTML-DOM-改变CSS" class="headerlink" title="JavaScript　HTML　DOM - 改变CSS"></a>JavaScript　HTML　DOM - 改变CSS</h4><p>改变 HTML 元素的样式，使用这个语法：</p><pre><code>document.getElementById(id).style.property=新样式</code></pre><h4 id="JavaScript-HTML-DOM-事件"><a href="#JavaScript-HTML-DOM-事件" class="headerlink" title="JavaScript　HTML　DOM 事件"></a>JavaScript　HTML　DOM 事件</h4><p>HTML DOM 使 JavaScript 有能力对 HTML 事件做出反应。</p><h4 id="JavaScript-HTML-DOM-EventListener"><a href="#JavaScript-HTML-DOM-EventListener" class="headerlink" title="JavaScript　HTML　DOM　EventListener"></a>JavaScript　HTML　DOM　EventListener</h4><pre><code>addEventListener() 方法用于向指定元素添加事件句柄。addEventListener() 方法添加的事件句柄不会覆盖已存在的事件句柄。</code></pre><p>可以向一个元素添加多个事件句柄。<br>可以向同个元素添加多个同类型的事件句柄，如：两个 “click” 事件。<br>可以向任何 DOM 对象添加事件监听，不仅仅是 HTML 元素。如： window 对象。<br>addEventListener() 方法可以更简单的控制事件（冒泡与捕获）。<br>当你使用 addEventListener() 方法时, JavaScript 从 HTML 标记中分离开来，可读性更强，在没有控制HTML标记时也可以添加事件监听。<br>你可以使用 removeEventListener() 方法来移除事件的监听。</p><h4 id="JavaScript-HTML-DOM-元素（节点）"><a href="#JavaScript-HTML-DOM-元素（节点）" class="headerlink" title="JavaScript　HTML　DOM　元素（节点）"></a>JavaScript　HTML　DOM　元素（节点）</h4><p>创建新的 HTML 元素（节点）- appendChild()<br>创建新的 HTML 元素 (节点) - insertBefore()<br>移除已存在的元素 - removeChild()<br>替换 HTML 元素 - replaceChild()</p><h4 id="JavaScript-HTML-DOM-集合-Collection"><a href="#JavaScript-HTML-DOM-集合-Collection" class="headerlink" title="JavaScript　HTML　DOM 集合(Collection)"></a>JavaScript　HTML　DOM 集合(Collection)</h4><p>getElementsByTagName() 方法返回 HTMLCollection 对象。<br>HTMLCollection 对象类似包含 HTML 元素的一个数组。<br>HTMLCollection 对象的 length 属性定义了集合中元素的数量。<br><strong>注意</strong><br>HTMLCollection 不是一个数组！<br>HTMLCollection 看起来可能是一个数组，但其实不是。<br>可以像数组一样，使用索引来获取元素。<br>HTMLCollection 无法使用数组的方法： valueOf(), pop(), push(), 或 join() 。</p><h4 id="JavaScript-HTML-DOM-节点列表"><a href="#JavaScript-HTML-DOM-节点列表" class="headerlink" title="JavaScript　HTML　DOM　节点列表"></a>JavaScript　HTML　DOM　节点列表</h4><p>NodeList 对象是一个从文档中获取的节点列表 (集合) 。<br>NodeList 对象类似 HTMLCollection 对象。都可以使用索引来获取元素，都有 length 属性。<br>NodeList 对象包含属性节点和文本节点。<br><strong>NodeList不是一个数组！</strong></p><h3 id="JavaScript内置对象"><a href="#JavaScript内置对象" class="headerlink" title="JavaScript内置对象"></a>JavaScript内置对象</h3><h4 id="String字符串对象："><a href="#String字符串对象：" class="headerlink" title="String字符串对象："></a>String字符串对象：</h4><pre><code>1. String对象：String对象用于处理已有的字符串字符串可以使用单引号或双引号2. 在字符串中查找字符串：indexOf()3. 内容匹配：match()4. 替换内容：replace()5. 字符串大小写转换：toUpperCase()/toLowerCase()6. 字符串转为数组：strong&gt;split() </code></pre><h4 id="Date日期对象："><a href="#Date日期对象：" class="headerlink" title="Date日期对象："></a>Date日期对象：</h4><pre><code>1. Date对象：日期对象用于处理日期和时间2. 获得当日的日期3. 常用方法：  getFullYear()：获取年份  gerTime()：获取毫秒  setFullYear()：设置具体的日期  getDay()：获取星期 </code></pre><h4 id="Array数组对象"><a href="#Array数组对象" class="headerlink" title="Array数组对象"></a>Array数组对象</h4><pre><code>1. Array对象：使用单独的变量名来存储一系列的值2. 数组的创建：例：var arr=[&quot;html&quot;,&quot;css&quot;,&quot;javascript&quot;];3. 数组的访问：通过指定的组名以及索引号码可以访问某个特定的元素**注意：**[0]是数组的第一个元素，[1]是数组的第二个元素。4. 数组常用方法：  concat()：合并数组  sort()：排序  pushh()：末尾追加元素  reverse()：数组元素翻转 </code></pre><h4 id="Math对象"><a href="#Math对象" class="headerlink" title="Math对象"></a>Math对象</h4><pre><code>1. Math对象：执行常见的算数任务2. 常用方法：  round()：四舍五入  random()：返回0~1之间的随机数  随机0~10之间的整数：paserInt(Math.random()*10);  max()：返回最大值  min()：返回最小值  abs()：返回绝对值 </code></pre><h3 id="JavaScript小练手："><a href="#JavaScript小练手：" class="headerlink" title="JavaScript小练手："></a>JavaScript小练手：</h3><p><strong><a href="https://github.com/nakuYK/pinterest-style-layout" target="_blank" rel="noopener">JS实现瀑布流布局</a></strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;JavaScript事件&quot;&gt;&lt;a href=&quot;#JavaScript事件&quot; class=&quot;headerlink&quot; title=&quot;JavaScript事件&quot;&gt;&lt;/a&gt;JavaScript事件&lt;/h3&gt;&lt;p&gt;onclick　　　　单击事件&lt;br&gt;onmouseover
      
    
    </summary>
    
      <category term="笔记" scheme="http://yoursite.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>HTML+CSS笔记</title>
    <link href="http://yoursite.com/2019/02/24/HTML5%E6%96%B0%E7%89%B9%E6%80%A7/"/>
    <id>http://yoursite.com/2019/02/24/HTML5新特性/</id>
    <published>2019-02-24T05:13:21.000Z</published>
    <updated>2019-02-24T14:07:37.776Z</updated>
    
    <content type="html"><![CDATA[<h2 id="HTML5新特性："><a href="#HTML5新特性：" class="headerlink" title="HTML5新特性："></a>HTML5新特性：</h2><h4 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h4><pre><code>用于绘画的canvas标签 用于媒介回放的video和audio元素 对本地离线储存的更好支持 </code></pre><h4 id="元素"><a href="#元素" class="headerlink" title="元素"></a>元素</h4><pre><code>新的特殊内容元素 如：article、footer、header、nav、section 新的表单控件 如：calendar、date、time、email、url、search </code></pre><h4 id="浏览器支持"><a href="#浏览器支持" class="headerlink" title="浏览器支持"></a>浏览器支持</h4><pre><code>Safari、Chrome、Firefox、Opera以及IE9基本支持了HTML5 </code></pre><h2 id="HTML属性："><a href="#HTML属性：" class="headerlink" title="HTML属性："></a>HTML属性：</h2><h4 id="常用标签属性："><a href="#常用标签属性：" class="headerlink" title="常用标签属性："></a>常用标签属性：</h4><pre><code>&lt;h1&gt;:align 对齐方式 &lt;body&gt;:bgcolor 背景颜色 &lt;a&gt;:target 规定在何处打开链接herf 指向一个文档的链接 name 创建文档内的链接 </code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;HTML5新特性：&quot;&gt;&lt;a href=&quot;#HTML5新特性：&quot; class=&quot;headerlink&quot; title=&quot;HTML5新特性：&quot;&gt;&lt;/a&gt;HTML5新特性：&lt;/h2&gt;&lt;h4 id=&quot;标签&quot;&gt;&lt;a href=&quot;#标签&quot; class=&quot;headerlink&quot; 
      
    
    </summary>
    
      <category term="笔记" scheme="http://yoursite.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="HTML" scheme="http://yoursite.com/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2019/02/22/hello-world/"/>
    <id>http://yoursite.com/2019/02/22/hello-world/</id>
    <published>2019-02-22T06:55:11.035Z</published>
    <updated>2019-02-22T06:55:11.035Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
